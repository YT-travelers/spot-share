openapi: 3.0.0
info:
  title: spot-share
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /spots:
    post:
      summary: ''
      operationId: post-spots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spot'
            examples: {}
        description: ''
    parameters: []
  '/spots/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: ''
      operationId: patch-spots-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spot'
    get:
      summary: ''
      operationId: get-spots-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpotResponse'
    delete:
      summary: ''
      operationId: delete-spots-id
      responses:
        '200':
          description: OK
  /routes:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RouteResponse'
      operationId: get-routes
    post:
      summary: ''
      operationId: post-routes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
  '/routes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  spots:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        image_path:
                          type: string
                        order:
                          type: integer
      operationId: get-routes-id
    delete:
      summary: ''
      operationId: delete-routes-id
      responses:
        '200':
          description: OK
    patch:
      summary: ''
      operationId: patch-routes-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
  '/routes/{route_id}/spots/{spot_id}':
    parameters:
      - schema:
          type: string
        name: route_id
        in: path
        required: true
      - schema:
          type: string
        name: spot_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  route_id:
                    type: integer
                  spot_id:
                    type: integer
                  order:
                    type: integer
                  scheduled_date_time:
                    type: string
                  cost_expectation:
                    type: integer
                  required_time_expectation:
                    type: string
                  favorite_point: {}
                  memo:
                    type: string
                  country:
                    $ref: '#/components/schemas/Country'
      operationId: get-routes-route_id-spots-spot_id
    patch:
      summary: ''
      operationId: patch-routes-route_id-spots-spot_id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: integer
                scheduled_date_time:
                  type: string
                cost_expectation:
                  type: integer
                required_time_expectation:
                  type: string
                favorite_point:
                  type: integer
                memo:
                  type: string
    delete:
      summary: ''
      operationId: delete-routes-route_id-spots-spot_id
      responses:
        '200':
          description: OK
  '/routes/{route_id}/spots/bulk_insert':
    parameters:
      - schema:
          type: string
        name: route_id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-routes-route_id-spots-bulk_insert
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  spot_id:
                    type: integer
                  order:
                    type: string
                  scheduled_date_time:
                    type: string
                  cost_expectation:
                    type: integer
                  required_time_expectation:
                    type: string
                  favorite_point:
                    type: integer
                  memo:
                    type: string
                required:
                  - spot_id
  /countries:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
      operationId: get-countries
  '/countries/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
      operationId: get-countries-id
components:
  schemas:
    SpotForm:
      title: SpotForm
      type: object
      properties:
        country_id:
          type:
            - integer
            - 'null'
        name:
          type: string
        url:
          type:
            - string
            - 'null'
        memo:
          type:
            - string
            - 'null'
        file:
          type:
            - string
            - 'null'
    SpotResponse:
      title: SpotResponse
      type: object
      properties:
        id:
          type: integer
        country_id:
          type: integer
        name:
          type: string
        url:
          type: string
        memo:
          type: string
        image_path:
          type: string
      required:
        - id
    RouteResponse:
      title: RouteResponse
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Country:
      title: Country
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        currency:
          type: string
        timezone:
          type: string
